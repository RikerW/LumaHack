! $NHDT-Date: 1542244983 2018/11/15 01:23:03 $  $NHDT-Branch: LumaHack-3.6.2-beta01 $:$NHDT-Revision: 1.20 $
! Copyright (c) 2017 by Pasi Kallinen
! LumaHack may be freely redistributed.  See license for details.

#define NETHACK_FONT       -*-fixed-medium-*-*-*-15-*-*-*-*-*-*-*
#define NETHACK_CLR_FG     grey
#define NETHACK_CLR_BG     black
#define NETHACK_CLR_QUIT   red
#define NETHACK_CLR_RANDOM yellow
#define NETHACK_CLR_PLAY   green
#define NETHACK_CLR_HELP   green
#define NETHACK_BTN_SHAPE  roundedRectangle
#define NETHACK_BTN_ROUND  20
#define NETHACK_CMD_BORDER 0

! The display_file, tombstone, and menu windows are all formatted assuming
! a fixed width font.  Text windows may or may not be formatted as above.
! The rip window applies if the GRAPHIC_TOMBSTONE option is turned on, and
! requires a 12 pixel font for correct appearance.
!
LumaHack*font:              NETHACK_FONT
LumaHack*display_file*font: NETHACK_FONT
LumaHack*map*font:          NETHACK_FONT
LumaHack*text*font:         NETHACK_FONT
LumaHack*menu*font:         NETHACK_FONT
LumaHack*tombstone*font:    NETHACK_FONT
LumaHack*text*rip*font:     -*-times-medium-r-*-*-12-*-*-*-*-*-*-*
LumaHack*text*borderWidth:  0

! tile_file names a file containing full-color tiles for the map.
! If you use a 100dpi (or greater) monitor you may wish to double the
! tile size so you can see the figures.  If LumaHack was compiled to
! use XPM (USE_XPM in config.h), the tile_file is a standard XPM file.
! Otherwise, it is a custom format.  double_tile_size only applies to
! the custom format - to enlarge an XPM file, use processing tools
! such as XV or preferably PBMplus.
!
LumaHack.tile_file: x11tiles
!LumaHack.double_tile_size: True

! The annotation of pets.
!LumaHack.pet_mark_bitmap: pet_mark.xbm
!LumaHack.pet_mark_color: Red
! The annotation of item piles.
!LumaHack.pilemark_bitmap: pilemark.xbm
!LumaHack.pilemark_color: Green

! Tombstone
! The image file
!LumaHack.tombstone: rip.xpm
! Text starts at (tombtext_x, tombtext_y) and subsequent lines
! are displaced by (tombtext_dx, tombtext_dy) pixels.
!LumaHack.tombtext_x: 155
!LumaHack.tombtext_y: 78
!LumaHack.tombtext_dx: 0
!LumaHack.tombtext_dy: 13
! The color to use for the text on the hero's tombstone
LumaHack*rip*foreground: black

! The icon to use; supported values are nh72, nh56, and nh32; nh72 is the
! default.  Some window managers may not support the larger icon sizes.
! It is not guaranteed that the window manager will honor the icon selection.
!LumaHack*icon: nh56

! If True, the default, a popup for single character prompts such as y/n
! questions is _not_ used.  Single-character prompts appear in a fixed
! position between the top of the map and the bottom of the messages.
! If False, popups appear near where the pointer is positioned so tend to
! meander around the screen depending upon where the last click ocurred.
! (The name 'slow' is misleading; this feature was originally necessitated
! by window managers which were slow putting up popup windows, but the
! fixed-position prompting can be just as useful for quick popups.)
!LumaHack*slow: False

! If True, force keyboard to attach to popup windows.  Some window managers
! enforce a click-to-focus-keyboard policy (e.g. the DECwindows wm).  LumaHack
! has a lot of popups and is almost unplayable without some kind of autofocus.
!LumaHack*autofocus: True

! If 'slow' is True, setting 'highlight_prompt' to True will cause the line
! between map and message display that's used for prompting to be "hidden"
! as part of the map when no prompt is active, then invert foreground and
! background to stand out when a prompt is issued and waiting for a response.
! If 'slow' is False, 'highlight_prompt' will have no effect.
LumaHack*highlight_prompt: False

! The number of lines the message window will show without scrolling.
!LumaHack*message_lines: 12

! If True, the message window has a line that seperates old and new messages.
!LumaHack*message_line: True

! If True, the default, use a "fancy" style status area below the map.
! Fancy status has some highlighting but does not honor HILITE_STATUS.
! If False, use TTY-style status lines (two text lines below the map).
! TTY status honors HILITE_STATUS thresholds and colors, but for
! attributes only supports inverse (not bold, dim, blink, or underline).
! (As of this writing, fancy status looks better with a tiles map and
! tty-style status looks good with a text map but not with a tiles one.)
!LumaHack*fancy_status: False

! Translation tables.  There are currently several actions in lumahack, but
! the only one you should be using is "input()", which, with no parameters,
! uses XLookupString to translate your keypress into a command.  You can
! optionally give it parameters to change the behavior, see the example below.
! Note that you have to specify the translations in every appropriate window.
LumaHack*message*translations:	<KeyPress>: input()
!
! Example extra translations for the map window.
!LumaHack*map*translations:	#override \
!				!<Key>Left: input(h) \n\
!				!<Key>Right: input(l) \n\
!				!<Key>Up: input(k) \n\
!				!<Key>Down: input(j)

! Specify the number of rows and columns of the map window.  The default
! is the standard 80x21 window.  Note: this _does_not_ change lumahack's
! level size, only what you see of it.
!LumaHack*map*rows:	21
!LumaHack*map*columns:	80

LumaHack*background: NETHACK_CLR_BG
LumaHack*foreground: NETHACK_CLR_FG

LumaHack*yn_prompt*borderWidth: 0

LumaHack*Scrollbar*foreground: gray40
LumaHack*Scrollbar*background: gray10

LumaHack*fancy_status*background: NETHACK_CLR_BG
LumaHack*fancy_status*foreground: NETHACK_CLR_FG
LumaHack*fancy_status.skipAdjust: True

LumaHack*showGrip: False

! text input prompt window
LumaHack*response*textSink*background: red
LumaHack*textSink*background: red

LumaHack*response*foreground:  NETHACK_CLR_FG
LumaHack*response*background:  NETHACK_CLR_BG
LumaHack*response*borderColor: NETHACK_CLR_FG
LumaHack*response*borderWidth: 1

! player selection dialog (OPTIONS=player_selection:dialog)
!LumaHack*player_selection_dialog.height:   420
!LumaHack*player_selection_dialog.width:   403

!LumaHack*player_selection_dialog*foreground:   black
!LumaHack*player_selection_dialog*background:   white
LumaHack*player_selection_dialog*name_label.borderWidth:   0
LumaHack*player_selection_dialog*race_label.borderWidth:   0
LumaHack*player_selection_dialog*role_label.borderWidth:   0
LumaHack*player_selection_dialog*gender_label.borderWidth: 0
LumaHack*player_selection_dialog*align_label.borderWidth:  0
LumaHack*player_selection_dialog*button_vp.borderWidth:    0

LumaHack*player_selection_dialog*name_input.borderWidth:   1
LumaHack*player_selection_dialog*name_input.borderColor:   NETHACK_CLR_FG

LumaHack*player_selection_dialog*role_vp.borderColor:   NETHACK_CLR_FG
LumaHack*player_selection_dialog*race_vp.borderColor:   NETHACK_CLR_FG
LumaHack*player_selection_dialog*gender_vp.borderColor: NETHACK_CLR_FG
LumaHack*player_selection_dialog*align_vp.borderColor:  NETHACK_CLR_FG

LumaHack*player_selection_dialog*random.foreground:   NETHACK_CLR_RANDOM
LumaHack*player_selection_dialog*random.borderColor:  NETHACK_CLR_RANDOM
LumaHack*player_selection_dialog*random.borderWidth:  1
LumaHack*player_selection_dialog*random.shapeStyle:   NETHACK_BTN_SHAPE
LumaHack*player_selection_dialog*random.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*player_selection_dialog*quit.foreground:     NETHACK_CLR_QUIT
LumaHack*player_selection_dialog*quit.borderColor:    NETHACK_CLR_QUIT
LumaHack*player_selection_dialog*quit.borderWidth:    1
LumaHack*player_selection_dialog*quit.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*player_selection_dialog*quit.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*player_selection_dialog*play.foreground:     NETHACK_CLR_PLAY
LumaHack*player_selection_dialog*play.borderColor:    NETHACK_CLR_PLAY
LumaHack*player_selection_dialog*play.borderWidth:    1
LumaHack*player_selection_dialog*play.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*player_selection_dialog*play.cornerRoundPercent: NETHACK_BTN_ROUND


! role selection window  (OPTIONS=player_selection:prompts)
LumaHack*player_selection*btn_random.foreground:   NETHACK_CLR_RANDOM
LumaHack*player_selection*btn_random.background:   black
LumaHack*player_selection*btn_random.borderColor:  NETHACK_CLR_RANDOM
LumaHack*player_selection*btn_random.borderWidth:  1
LumaHack*player_selection*btn_random.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*player_selection*btn_random.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*player_selection*btn_quit.foreground:     NETHACK_CLR_QUIT
LumaHack*player_selection*btn_quit.borderColor:    NETHACK_CLR_QUIT
LumaHack*player_selection*btn_quit.borderWidth:    1
LumaHack*player_selection*btn_quit.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*player_selection*btn_quit.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*player_selection*Command.foreground:  NETHACK_CLR_FG
LumaHack*player_selection*Command.borderColor: NETHACK_CLR_FG
LumaHack*player_selection*Command.borderWidth: NETHACK_CMD_BORDER

! race selection window
LumaHack*race_selection*btn_random.foreground:   NETHACK_CLR_RANDOM
LumaHack*race_selection*btn_random.background:   black
LumaHack*race_selection*btn_random.borderColor:  NETHACK_CLR_RANDOM
LumaHack*race_selection*btn_random.borderWidth:  1
LumaHack*race_selection*btn_random.shapeStyle:   NETHACK_BTN_SHAPE
LumaHack*race_selection*btn_random.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*race_selection*btn_quit.foreground:     NETHACK_CLR_QUIT
LumaHack*race_selection*btn_quit.borderColor:    NETHACK_CLR_QUIT
LumaHack*race_selection*btn_quit.borderWidth:    1
LumaHack*race_selection*btn_quit.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*race_selection*btn_quit.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*race_selection*Command.foreground:  NETHACK_CLR_FG
LumaHack*race_selection*Command.borderColor: NETHACK_CLR_FG
LumaHack*race_selection*Command.borderWidth: NETHACK_CMD_BORDER

! gender selection window
LumaHack*gender_selection*btn_random.foreground:   NETHACK_CLR_RANDOM
LumaHack*gender_selection*btn_random.background:   black
LumaHack*gender_selection*btn_random.borderColor:  NETHACK_CLR_RANDOM
LumaHack*gender_selection*btn_random.borderWidth:  1
LumaHack*gender_selection*btn_random.shapeStyle:   NETHACK_BTN_SHAPE
LumaHack*gender_selection*btn_random.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*gender_selection*btn_quit.foreground:     NETHACK_CLR_QUIT
LumaHack*gender_selection*btn_quit.borderColor:    NETHACK_CLR_QUIT
LumaHack*gender_selection*btn_quit.borderWidth:    1
LumaHack*gender_selection*btn_quit.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*gender_selection*btn_quit.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*gender_selection*Command.foreground:  NETHACK_CLR_FG
LumaHack*gender_selection*Command.borderColor: NETHACK_CLR_FG
LumaHack*gender_selection*Command.borderWidth: NETHACK_CMD_BORDER

! alignment selection window
LumaHack*alignment_selection*btn_random.foreground:   NETHACK_CLR_RANDOM
LumaHack*alignment_selection*btn_random.background:   black
LumaHack*alignment_selection*btn_random.borderColor:  NETHACK_CLR_RANDOM
LumaHack*alignment_selection*btn_random.borderWidth:  1
LumaHack*alignment_selection*btn_random.shapeStyle:   NETHACK_BTN_SHAPE
LumaHack*alignment_selection*btn_random.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*alignment_selection*btn_quit.foreground:     NETHACK_CLR_QUIT
LumaHack*alignment_selection*btn_quit.borderColor:    NETHACK_CLR_QUIT
LumaHack*alignment_selection*btn_quit.borderWidth:    1
LumaHack*alignment_selection*btn_quit.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*alignment_selection*btn_quit.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*alignment_selection*Command.foreground:  NETHACK_CLR_FG
LumaHack*alignment_selection*Command.borderColor: NETHACK_CLR_FG
LumaHack*alignment_selection*Command.borderWidth: NETHACK_CMD_BORDER

! extended commands window
LumaHack*extended_commands*btn_dismiss.foreground:  NETHACK_CLR_QUIT
LumaHack*extended_commands*btn_dismiss.borderColor: NETHACK_CLR_QUIT
LumaHack*extended_commands*btn_dismiss.borderWidth: 1
LumaHack*extended_commands*btn_dismiss.shapeStyle:  NETHACK_BTN_SHAPE
LumaHack*extended_commands*btn_dismiss.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*extended_commands*btn_help.foreground:     NETHACK_CLR_HELP
LumaHack*extended_commands*btn_help.borderColor:    NETHACK_CLR_HELP
LumaHack*extended_commands*btn_help.borderWidth:    1
LumaHack*extended_commands*btn_help.shapeStyle:     NETHACK_BTN_SHAPE
LumaHack*extended_commands*btn_help.cornerRoundPercent: NETHACK_BTN_ROUND
LumaHack*extended_commands*Command.foreground:  NETHACK_CLR_FG
LumaHack*extended_commands*Command.borderColor: NETHACK_CLR_FG
LumaHack*extended_commands*Command.borderWidth: NETHACK_CMD_BORDER
! The extended command menu may be too big to fit on the screen so need
! a vertical scroll bar.  When truncated, its height will be as tall as
! possible unless height_delta is non-zero, in which case there will be
! that many pixels of margin left unused.  On OSX, this can be used to
! avoid overlapping with the desktop docking tray to prevent that from
! obscuring the bottom of the menu.
LumaHack*extcmd_height_delta: 75

! menu buttons
LumaHack*OK.foreground:  green
LumaHack*OK.borderColor: green
LumaHack*OK.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*OK.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*okay.foreground:  green
LumaHack*okay.borderColor: green
LumaHack*okay.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*okay.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*cancel.foreground:  red
LumaHack*cancel.borderColor: red
LumaHack*cancel.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*cancel.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*all.foreground:  green
LumaHack*all.borderColor: green
LumaHack*all.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*all.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*none.foreground:  green
LumaHack*none.borderColor: green
LumaHack*none.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*none.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*invert.foreground:  green
LumaHack*invert.borderColor: green
LumaHack*invert.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*invert.cornerRoundPercent: NETHACK_BTN_ROUND

LumaHack*search.foreground:  green
LumaHack*search.borderColor: green
LumaHack*search.shapeStyle: NETHACK_BTN_SHAPE
LumaHack*search.cornerRoundPercent: NETHACK_BTN_ROUND

! map colors
! The foreground color is used as "no color".
LumaHack*map*foreground: NETHACK_CLR_FG
LumaHack*map*background: NETHACK_CLR_BG

LumaHack*map*black:          grey15
LumaHack*map*red:            red3
LumaHack*map*green:          green3
LumaHack*map*brown:          DarkOrange3
LumaHack*map*blue:           blue3
LumaHack*map*magenta:        magenta3
LumaHack*map*cyan:           Dark cyan
LumaHack*map*gray:           gray50
LumaHack*map*orange:         orange
LumaHack*map*bright_green:   green
LumaHack*map*yellow:         yellow
LumaHack*map*bright_blue:    Royal blue
LumaHack*map*bright_magenta: Fuchsia
LumaHack*map*bright_cyan:    cyan
LumaHack*map*white:          white
!
! The following are the default 15 colors that the lumahack map uses.
!LumaHack*map*black:		black
!LumaHack*map*red:		red
!LumaHack*map*green:		pale green
!LumaHack*map*brown:		brown
!LumaHack*map*blue:		blue
!LumaHack*map*magenta:		magenta
!LumaHack*map*cyan:		light cyan
!LumaHack*map*gray:		gray
!LumaHack*map*orange:		orange
!LumaHack*map*bright_green:	green
!LumaHack*map*yellow:		yellow
!LumaHack*map*bright_blue:	royal blue
!LumaHack*map*bright_magenta:	violet
!LumaHack*map*bright_cyan:	cyan
!LumaHack*map*white:		white
